object ArrayPairs {


  /*
  * Consider an array of n integers, A = [A1, A2, A3,......An].
  * Find and print the total number of (i,j) pairs such that Ai x Aj <= max( Ai, Ai+1,.....Aj) where  i< j.
  *
  * */

  def main(args: Array[String]): Unit = {

    // val output = findPairs(Array(6960696,18061806,2041,87048704,1574,14231423,9703,22902290,6862,54475447,6264,75607560,58605860,7808,7462,24602460,68486848,94059405,55545554,93549354,7485,6470647,27482748,40924092,40524052,79667966,35513551,1781,75717571,1724,89718971,4596,41014101,87438743,774,95169516,41164116,4386,23282328,50395039,8928,6465,17021702,7600760,791,4322,4240,13531353,82698269,60806080,370,70697069,2507,61826182,10611061,85348534,1885,30783078,1512,2212,86928692,27512751,2099,57425742,32883288,9897,9962,96009600,6506,3039,5730573,75377537,25372537,3967,1857,5486,78007800,5047,58855885,22522252,55885588,47014701,492,3778,6985,91729172,684,9190,332,50505050,96469646,83828382,2529,66676667,1474,59135913,9478,1941,1723,5971,3217,5281,98299829,15501550,58475847,19771977,2350235,88288828,2857,90379037,742,81738173,3929,5302,8666,305,346,70697069,1148,7699,834,80788078,96539653,30253025,3980,39733973,46674667,9100910,11081108,68836883,8169,8009,121,1850,24942494,1531,3540,3939,7075,4166,6268,4348,18441844,5745,47194719,7882,83478347,3360,9104,3000300,51865186,4070407,37573757,23852385,55505550,4391,69246924,1526,8588,5219,93209320,66436643,2176,4010,8445,3612,85338533,2300,1522,2912,43514351,7009,21022102,42524252,4536,4111,1902,2191,4257,4586,2935,60696069,111,12561256,83118311,6599,778,58365836,3719,11491149,5645,82198219,6405,9081,28682868,91429142,7962,6553,8588,31313131,325,4595,1067,6405,4969,8213,20932093,38263826,7455,13591359,50565056,85308530,7764,44914491,36833683,7925,4985,5396,5910,4917,20542054,40324032,566,4511,9015,29202920,9445,16441644,72497249,3100310,84058405,55255525,6017,43804380,3199,1383,9867,3112,1763,83028302,31923192,7222,2088,87448744,78,3166,1937,13581358,1387,63866386,41104110,3856,74337433,67696769,6011,99069906,64456445,6925,18831883,1058,57265726,841,63006300,4925,42204220,2936,4539,7729,6850,5963,20102010,92729272,9982,810081,6004,2858,3087,79757975,56785678,23122312,8355,38373837,62136213,71207120,661,9321,6378,23602360,46334633,7423,3071,74577457,2270,70127012,1977,17921792,65876587,28772877,17271727,75407540,825,9916,7958,63686368,86058605,250025,33323332,135,86588658,37703770,68376837,67306730,26882688,87218721,49884988,8004,3456,39053905,65876587,9930993,10661066,227,98669866,2801,71937193,7407,7715,8687,21072107,43804380,75917591,8444,28632863,87088708,25142514,9460946,80048004,17141714,4440,83758375,4864,42154215,490049,59225922,567,80908090,88218821,76277627,38303830,74727472,9462,31213121,28442844,61276127,5281,7211,82438243,37473747,82668266,6754,12141214,35983598,639,59205920,73917391,24262426,8433,97809780,94409440,4100410,7712,9241,8179,8549,810,31883188,4908,967,59175917,70217021,7706,7733,89068906,6829,7896,2263,69736973,4980498,15831583,8875,71667166,8586,20462046,1427,3048,52935293,8195,92569256,8279,61326132,6022,2399,6352,2577,2818,3091,77977797,4915,2170217,31003100,359,3070307,4277,49874987,64466446,16471647,27642764,9867,89188918,6642,8472,51415141,86228622,43024302,63596359,18931893,361,57755775,6079,81778177,33293329,8116,9603,57355735,62166216,79437943,38593859,49224922,8424,4182,2935,21942194,4787,9239,10471047,5318,4921,71787178,8778,86938693,1176,3011,7632,58165816,25082508,2817,6806,5410,43664366,9807,4381,99209920,7310,61366136,91049104,9531,3334,92529252,8237,9970,7984,13201320,23382338,96399639,79787978,60756075,94049404,79187918,6050605,56,90339033,9505,3144,94409440,811,55935593,2440244,17671767,8783,6320632,231,6080,2525,3398,85728572,80898089,799,7676,85198519,98089808,588,3188,7370,5629,5452,726,1985,18431843,66816681,8048,2957,6163,3889,2870,40044004,5517,48914891,63116311,8068,20772077,92359235,44684468,57395739,8348,5022,3760376,61496149,4446,5723,6352,470,4664,43124312,2310231,6264,81418141,47034703,58985898,8898,8629,2586,794,2127,3232,2825,45094509,3770377,67856785,5630,7958,4380,79677967,5650565,86598659,10061006,26372637,898,36493649,91689168,78377837,61686168,3387,7045,6730673,13551355,5884,1123,3669,83178317,37883788,96479647,7424,76557655,77187718,6288,2964,4662,49454945,85558555,57765776,7317,40084008,88778877,86278627,59995999,39403940,3155,130013,7250,7885,9102,95869586,5350,2061,55225522,85028502,11321132,7124,5185,86798679,10501050,92239223,6717,7951,97119711,317,88148814,76777677,14211421,80438043,8453,38453845,5067,64496449,3036,64046404,75117511,21512151,53205320,46684668,84508450,12001200,5259,56035603,54695469,451,21712171,9976,28582858,14541454,63186318,1640164,5540554,5570557,7108,1755,85548554,2873,44074407,52975297,85788578,47024702,24692469,40814081,9307,6635,7164,2397,4470447,38843884,4563,5440,7245,5871,4447,44894489,210021,64416441,91149114,33253325,94049404,1261,22592259,614,8035,16791679,7941,4491,3534,52295229,8550855,9137,3353,9774,603,8242,2997,88708870,8790,58035803,78937893,2725,78767876,6384,4193,28352835,1973,1351,17281728,3172,4125,7301,63606360,5011,9734,45904590,76717671,55335533,982,23192319,5392,1464,8815,42834283,18971897,70007,4982,3299,9877,58125812,47364736,742,45604560,7552,2013,9072,689,3143,64816481,89208920,75887588,7244,92979297,6340634,41444144,93989398,9571,76127612,4074,8812,93479347,80378037,8001,8326,5350535,86838683,37053705,57575757,63426342,4571,47364736,88908890,78327832,44784478,32443244,1275,4255,69386938,6704,2290,7253,44134413,38903890,86748674,26802680,9369,3213,7766,1110,84498449,22012201,29502950,81248124,84098409,31513151,67656765,13761376,8436,30533053,2832,97569756,29372937,27222722,83258325,97259725,5487,320,5842,1646,46044604,5582,80098009,3439,7926,572,42144214,65416541,8054,4106,19751975,31633163,46924692,1593,873,1857,386,4740,8788,8010801,55215521,57795779,350,16541654,86418641,5640564,5617,6771,2839,36503650,9180918,2346,64536453,3824,71157115,655,1470,6260626,9617,1519,9061,2161,69526952,19171917,25762576,7280,68666866,47554755,15271527,79177917,6861,26602660,84348434,83308330,18881888,7900,55885588,39013901,64866486,94949494,6629,8307,5395,43574357,2785,74137413,99759975,6272,4671,74027402,47724772,2421,4161,37513751,226,60426042,41314131,6511,6699,4447,2740,8396,1123,9506,5010,26602660,206,50175017,1840,8636,7098,790079,7950,4388,2036,59245924,1399,21902190,2337,29012901,47984798,54885488,23012301,83108310,73317331,10761076,2389,7456,2923,33423342,87718771,3669,95999599,9993,1830183,71417141,77537753,11801180,3946,29382938,23772377,7642,2793,67516751,58745874,4434,5920,46084608,6144,98509850,2875,3330,43994399,2624,78687868,7296,53625362,6815,3916,7797,64726472,532,1135,91119111,3855,9260926,149,88018801,2413,57555755,8193,46004600,20302030,91009100,4123,42674267,21492149,4267,3657,8027,209,7670767,7889,14831483,705,5567,7580,700,42784278,51445144,2150215,1470147,4445,58775877,6529,1611,52325232,6866,9720972,8966,859,17291729,8663,18211821,17571757,22112211,99999999,3620362,5410,15291529,2479,48614861,2186,84488448,2175,4812,47334733,1470147,19891989,181,5960596,75607560,8533,3022,2189,9117,43404340,89498949,6006,80228022,4310431,82488248,4810,9674,6941,72707270,32313231,2703,98559855,3705,8563))
    // println("output " + output)
    // expected 115365
    // output 116093

    val output = findPairs(Array(64866486,34973497,2493,60316031,471,1987,61186118,99749974,99929992,40114011,938,8289,38823882,57795779,3930393,1666,664,53395339,5477,7747,40044004,5444,11381138,6545,7408,18171817,14871487,18581858,4909,7940,5780,6478,9481,8609,6050,52815281,78897889,6788,2554,6170,6653,7595,4661,78447844,66716671,5640564,55605560,4439,4200,2116,3692,1150115,29852985,8400,593,6027,15341534,9674,5487,9759,18331833,49314931,2490249,4468,49904990,1060106,20902090,67076707,361,8555,85198519,73967396,34673467,30023002,73367336,73847384,95389538,78977897,18031803,43954395,10741074,4280428,69996999,45894589,8121,69806980,7350735,48114811,9361,38883888,45664566,77507750,44124412,4727,1960,2651,30743074,70727072,62266226,30123012,24842484,65046504,244,1720172,67186718,7386,28962896,3790,61456145,6441,9161,9381,7506,2022,3868,89678967,9525,1830,8200820,83798379,52565256,34863486,8800880,21552155,58035803,86538653,7955,78507850,16051605,2835,58335833,86808680,61326132,57595759,13251325,77847784,1304,36063606,51635163,50775077,88708870,96109610,2253,7893,90259025,9140,11671167,54795479,14431443,77377737,1830183,4447,90519051,6814,16571657,3622,8566,26562656,24662466,3584,2278,28872887,51645164,78437843,22202220,51185118,59875987,2618,30783078,55795579,28912891,3064,91269126,5310,9956,90739073,7876,73347334,64876487,1068,3573,7735,95409540,8022,1990,8996,58665866,43314331,81268126,84288428,58655865,4850485,6140,9386,456,6800680,5283,52,24822482,19351935,76197619,650065,119,44434443,6709,23602360,3575,6975,78497849,8313,1383,50615061,6902,9374,2070,7982,2482,1208,12621262,54345434,73407340,69796979,3973,554,1422,7866,5497,5171,78597859,7396,6723,7401,86348634,84268426,5367,30943094,94279427,93089308,57075707,18191819,610,1719,92039203,58805880,1075,931,32773277,4192,6356,7445,9073,26552655,4886,8200820,9705,9754,8693,40644064,9709,3953,29342934,1462,3531,8263,23682368,17281728,5063,50625062,28442844,71657165,3285,6717,1443,4235,7230723,90239023,2571,6341,200020,4556,93499349,8565,16141614,66286628,591,3100310,8040804,88148814,91429142,4928,6047,3171,6593,42104210,82928292,1976,8413,1602,6610661,3958,10621062,73617361,13821382,91149114,4737,7872,40374037,6622,5160,48914891,99329932,2571,9983,18321832,51135113,6173,1197,1295,58395839,24662466,646,6715,9363,8600860,5308,4565,9632,19081908,6829,3199,12061206,77187718,32433243,5138,11381138,7005,1751,4469,45204520,74397439,9773,3501,774,13281328,2151,4328,7954,16601660,34573457,4683,5480548,726,5320,6745,4650465,9568,8486,4776,9693,4250,4000,85438543,26092609,4161,7016,5068,4239,40674067,6276,50915091,2630263,5048,91849184,22172217,3466,99589958,8714,7680,74397439,5835,31573157,59945994,907,57925792,9796,82478247,65986598,24692469,3635,7292,3961,4560,8604,7399,4882,44134413,40134013,9885,69706970,8061,8460,6971,2174,84818481,3280,38323832,59815981,465,1561,20092009,1113,78247824,9012,510051,25652565,1439,8217,12491249,22692269,68896889,1490,51295129,2839,2119,22622262,62226222,3863,13961396,13841384,7708,24632463,4649,4984,67786778,345,3408,35073507,6042,565,61236123,4352,7315,6177,7576,1339,16691669,1431,3361,778,4700,4953,9338,1655,64386438,1160116,9604,7853,6837,7799,40954095,8688,8217,1511,62036203,4783,150015,479,5007,8725,34873487,99769976,1775,7893,2091,14541454,54225422,73277327,7852,10731073,6650,7221,39553955,1710,8193,4757,1826,14401440,4113,148,3436,8621,59705970,18341834,1574,6725,9183,38623862,7668,26872687,4218,30743074,39363936,7839,12441244,52785278,2941,2439,58235823,51915191,91049104,93269326,80938093,7006,12691269,62686268,2255,97329732,77517751,3175,3222,3704,58555855,52475247,86618661,798,8134,9531,48934893,99179917,81158115,8988,17691769,2092,48334833,9233,36743674,2397,3254,73727372,47914791,6630663,58165816,4258,77027702,32823282,4542,22462246,9569,5860586,61996199,17651765,74497449,6611,63616361,5746,9978,89498949,5121,72857285,44484448,87938793,706,2410241,1950195,4036,173,4389,70807080,40844084,3529,1866,5134,63246324,42854285,39793979,86788678,9561,15751575,812,5237,9685,87138713,6230,8747,98229822,7473,79007900,15121512,17951795,8141,3289,41924192,1552,1735,6865,4274,3163,89128912,6983,7530753,59155915,3231,7981,72747274,851,31613161,53955395,84798479,5106,5070507,13921392,78627862,1241,35693569,3323,92029202,6381,4481,3360336,48484848,92139213,79677967,8450,59695969,53945394,74257425,3742,72817281,8593,4720472,2353,1587,90429042,28222822,4354,7232,5866,4526,59255925,7630,5212,86958695,9457,5935,24952495,67446744,9512,26502650,7935,1926,7950795,36143614,2900290,8090809,6310,79697969,6215,20222022,66606660,9040904,30333033,1685,71327132,5986,6486,1688,97319731,1865,1776,20972097,79757975,81268126,7580758,7740,65726572,9985,24642464,5716,8699,33703370,4107,2040204,64646464,99719971,6692,57585758,55215521,3054,975,4207,36863686,51425142,4140,41794179,6789,8750,46994699,8010801,9005,3211,59085908,18021802,46334633,71957195,6241,75657565,92269226,99529952,1834,79677967,6758,7834,78607860,8882,17531753,70947094,25172517,2009,70317031,80758075,5413,87548754,7220,79117911,9930993,5404,5176,41204120,7240,1730,327,98629862,34563456,10831083,1233,3798,7859,6928,28232823,64266426,51405140,99569956,55175517,86948694,24742474,99879987,90379037,90849084,49014901,66296629,6088,6860686,23752375,2618,266,14391439,1920192,4159,4781,51595159,8434,9513,5544,16591659,785,7416,8947,10471047,72267226,6734,3306,6978,1894,74247424,1781,98309830,38103810,59465946,44144414,92999299,4647,73087308,24422442,97089708,83568356,6517,5593,50595059,9569,70547054,5372,3886,8881,1550,27612761,10321032,2620,23142314,1790,6979,5394,7067,8429,99639963,85488548,4950495,1151,4884,93639363,45484548,57635763,52835283,65426542,2233,16741674,9072,7500,45974597,64466446,92129212,79017901,4009,87528752,51265126,6096,21252125,3764,28152815,84688468,63576357,25262526,97609760,6901,55005500,82418241,38953895,9217,5787,61366136,4770477,78617861,9693,3338,84858485,373,87838783,53255325,1900190,6577,73467346,58535853,34483448,5997,1358,1191,91079107,8564,8983,7542,9122,93239323,99899989,9246,5306,8714,728,3896,7497,550055,6310631,6402,4086,89908990,36743674,11701170,39113911,69466946,4195,32793279,4613,1290129,89488948,39103910,88798879,36423642,4377,12611261,5314,22182218,10791079,63596359,4871,4542,8262,15571557,52635263,6711,9353,7639,4720,74237423,5224,9747,98659865,3170317,9063,27172717,62136213,6110611,1743,58425842,4798,9457,7347,872,1333,8213,17271727,197,21372137,60236023,5043,701,75197519,7490749,4810,5952,14321432,3429,8457,134,41054105,1842,65836583,666,1937,1958,29542954,4760476,5317,92529252,6637,83198319,64256425,631,1383,3269,2568,58425842,76047604,71047104,42224222,5460546,7448,17091709,96469646,6251,2049,95579557,7090,6879,5530,91249124,38183818,3810381,7041,7642,74977497,2599,8066,95529552,3557,27332733,11801180,47194719,93619361,6572,6480648,9035,21982198,9370,13531353,72177217,6997,4571,49864986,48004800,4476,1786,5090,9418,38863886,2954,84578457,26992699,2381,2076,3609,40144014,78257825))
    println("output " + output)
    // Expected 119445
    // output 120358

     //println(findPairs(Array(1,1,2,4,2)))
     //println(findPairs(Array(2,3,4,5,7,2)))
     // println(findPairs(Array(7,5,4,3,2,2)))
  }


  def findPairs(arr: Array[Int]) : Long = {

    if( 1 > arr.length || arr.length > 500000L || arr.max > 1000000000L || arr.max  < 1) {
      return 0
    }


    var totalPairs = 0L
    var maxElem = arr(0)
    var curr = arr(0)
    var num : Map[Int,Long] =  Map[Int,Long](arr(0) -> 1L)



    for (k <- 1 to arr.length-1)
      {

        // init
        curr = arr(k)
        maxElem = if(curr > maxElem) curr else maxElem



        // update pairs count
        if(curr == 1) {
          println("is 1")
          totalPairs += k
        } else if(curr == maxElem && num.contains(1)){
          println("is max and has 1")
          totalPairs += num(1)
        } else if(curr == maxElem){
          println("is max")
          totalPairs = totalPairs
        }else{
          val div = maxElem/curr

          val filterKeyss = num.keys.toList.filter( x => x<=div)

          if(filterKeyss.nonEmpty){
            val filterKeyssValue = filterKeyss.map(num(_))
            val filterKeyssValueSum = filterKeyssValue.sum

            totalPairs += filterKeyssValueSum
          }
        }


        // add/update nums
        if(num.contains(curr)) {
          num += ( curr -> (num(curr) +1))
        }else {
          num += (curr -> 1L)
        }


      }

    totalPairs


  }

}
